version: "3.8"

services:
  bank-commands:
    build:
      context: ./bank-commands
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    volumes:
      - ./bank-commands/configs/app/local.yaml:/config.yaml
    environment:
      CONFIG_PATH: "/config.yaml"
    depends_on:
      - postgres

  bank-workers:
    build:
      context: ./bank-workers
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    volumes:
      - ./bank-workers/configs/app/local.yaml:/config.yaml
    environment:
      CONFIG_PATH: "/config.yaml"
    depends_on:
      - kafka

  bank-projector:
    build:
      context: ./bank-read-models
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    volumes:
      - ./bank-read-models/configs/app/local.yaml:/config.yaml
    environment:
      CONFIG_PATH: "/config.yaml"
    depends_on:
      - redis

  bank-api:
    build:
      context: ./bank-api
      dockerfile: Dockerfile
    ports:
      - "8084:8080"
    volumes:
      - ./bank-api/configs/app/local.yaml:/config.yaml
    environment:
      CONFIG_PATH: "/config.yaml"
    depends_on:
      - bank-commands
      - bank-read-models

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

volumes:
  pgdata:
