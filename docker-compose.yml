services:
  bank-services:
    build:
      context: bank-services
      dockerfile: Dockerfile
    ports:
      - "44044:44044"
    volumes:
      - ./bank-services/configs/app/local.yaml:/app/configs/app/local.yaml
    environment:
      CONFIG_PATH: "/app/configs/app/local.yaml"
    depends_on:
      postgres:
        condition: service_healthy

  outbox-processor:
    build:
      context: outbox-processor
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./outbox-processor/configs/app/local.yaml:/app/configs/app/local.yaml
    environment:
      CONFIG_PATH: "/app/configs/app/local.yaml"
      KAFKA_BROKER_URL: "kafka:9092"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: rootroot
      POSTGRES_DB: BankApp
    ports:
      - "5435:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_INIT_LIMIT: 3
      ZOOKEEPER_SYNC_LIMIT: 2
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-server:7.7.1
    hostname: kafka
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:29092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9020:8080"
    environment:
      AUTH_TYPE: DISABLED
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      kafka:
        condition: service_healthy

volumes:
  pgdata:
  kafkadata:
